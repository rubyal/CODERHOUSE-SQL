USE juegosolimpicos;

SELECT * FROM hechosathlete;
DESCRIBE ATHLETE;


DROP TABLE IF EXISTS LOG_INSERCION_ATHLETE;
CREATE TABLE LOG_INSERCION_ATHLETE
(id_log INT PRIMARY KEY AUTO_INCREMENT,
id_athlete INT NOT NULL,
name varchar(70),
sex varchar(2),
age int, 
height int,
weight float,
usuario VARCHAR (60),
fecha_hora DATETIME
);



DROP TRIGGER IF EXISTS  LOG_INSERCION_ATHLETE;
CREATE TRIGGER LOG_INSERCION_ATHLETE
AFTER INSERT ON athlete 
FOR EACH ROW
INSERT INTO LOG_INSERCION_ATHLETE VALUES 
(DEFAULT, new.id_athlete, new.name, new.sex, new.age, new.height, new.weight, USER(), NOW());
SELECT * FROM LOG_INSERCION_ATHLETE;
INSERT INTO ATHLETE VALUES (DEFAULT, 'HOLA', 'M', 70, 180, 80);
SELECT * FROM LOG_INSERCION_ATHLETE;
SELECT * FROM ATHLETE;



DROP TABLE IF EXISTS LOG_MODIFICACION_ATHLETE;
CREATE TABLE LOG_MODIFICACION_ATHLETE_NAME(
id_log INT PRIMARY KEY AUTO_INCREMENT,
id_athlete INT NOT NULL,
viejo_name VARCHAR(70),
nuevo_name VARCHAR(70),
usuario VARCHAR (60),
fecha_hora DATETIME
);

DROP TRIGGER IF EXISTS  LOG_MODIFICACION_ATHLETE;
CREATE TRIGGER LOG_MODIFICACION_ATHLETE_NAME
AFTER UPDATE ON ATHLETE
FOR EACH ROW
INSERT INTO LOG_MODIFICACION_ATHLETE_NAME VALUES (DEFAULT, old.id_athlete, old.name, new.name, USER(), NOW());


SELECT * FROM LOG_MODIFICACION_ATHLETE_NAME;
UPDATE ATHLETE SET name='love' where id_athlete=101;
UPDATE ATHLETE SET name='love2'  where id_athlete=101;
SELECT * FROM LOG_MODIFICACION_ATHLETE_NAME;

DROP TABLE IF EXISTS LOG_DELETE_ATHLETE_NAME;
CREATE TABLE LOG_DELETE_ATHLETE_NAME(
id_log INT PRIMARY KEY AUTO_INCREMENT,
id_athlete INT NOT NULL,
name varchar(70),
sex varchar(2),
age int, 
height int,
weight float,
usuario VARCHAR (60),
fecha_hora DATETIME
);

DROP TRIGGER IF EXISTS LOG_DELETE_ATHLETE_NAME;
CREATE TRIGGER LOG_DELETE_ATHLETE_NAME
AFTER DELETE ON ATHLETE
FOR EACH ROW 
INSERT INTO LOG_DELETE_ATHLETE_NAME VALUES(DEFAULT, old.id_athlete, old.name, old.sex, old.age, old.height, old.weight, USER(), NOW());

SELECT * FROM LOG_DELETE_ATHLETE_NAME;
DELETE FROM ATHLETE WHERE ID_ATHLETE >= 101;
SELECT * FROM LOG_DELETE_ATHLETE_NAME;

SELECT * FROM ATHLETE;


SELECT * FROM HECHOSATHLETE;


DROP TABLE IF EXISTS LOG_INSERCION_HECHOSATHLETE;
CREATE TABLE LOG_INSERCION_HECHOSATHLETE
(id_log INT PRIMARY KEY AUTO_INCREMENT,
id_hechos INT NOT NULL,
id_athlete INT NOT NULL,
id_year INT,
id_season INT,
id_noc INT, 
id_games INT,
id_city INT,
id_sport INT,
id_event INT,
id_medal INT,
usuario VARCHAR (60),
fecha_hora DATETIME
);


DROP TRIGGER IF EXISTS  LOG_INSERCION_HECHOSATHLETE;
CREATE TRIGGER LOG_INSERCION_HECHOSATHLETE
AFTER INSERT ON hechosathlete 
FOR EACH ROW
INSERT INTO LOG_INSERCION_HECHOSATHLETE VALUES 
(DEFAULT, new.id_hechos, new.id_athlete, new.id_year, new.id_season, new.id_noc, new.id_games, new.id_city,  new.id_sport,  new.id_event,  new.id_medal, USER(), NOW());
SELECT * FROM LOG_INSERCION_HECHOSATHLETE;
INSERT INTO HECHOSATHLETE VALUES (102, 1, 1, 1, 1, 1, 1, 1, 1, 1);
SELECT * FROM LOG_INSERCION_HECHOSATHLETE;
SELECT * FROM HECHOSATHLETE;
DESCRIBE HECHOSATHLETE;

DROP TABLE IF EXISTS LOG_DELETE_ATHLETE;
CREATE TABLE LOG_DELETE_HECHOSATHLETE(
id_log INT PRIMARY KEY AUTO_INCREMENT,
id_hecho INT NOT NULL,
id_athlete INT NOT NULL,
id_year INT,
id_season INT,
id_noc INT, 
id_games INT,
id_city INT,
id_sport INT,
id_event INT,
id_medal INT,
usuario VARCHAR (60),
fecha_hora DATETIME
);


DROP TRIGGER IF EXISTS  LOG_DELETE_HECHOSATHLETE;
CREATE TRIGGER LOG_DELETE_HECHOSATHLETE
AFTER DELETE ON HECHOSATHLETE
FOR EACH ROW
INSERT INTO LOG_DELETE_HECHOSATHLETE VALUES 
(DEFAULT, old.id_hechos, old.id_athlete, old.id_year, old.id_season, old.id_noc, old.id_games, old.id_city, old.id_sport,  old.id_event,  old.id_medal, USER(), NOW());


SELECT * FROM LOG_DELETE_HECHOSATHLETE;
DELETE FROM HECHOSATHLETE WHERE ID_HECHOS >=102;
SELECT * FROM LOG_DELETE_HECHOSATHLETE;

SELECT * FROM HECHOSATHLETE;


